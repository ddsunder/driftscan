==================
Dish Array Example
==================

This example contains a custom telescope class that simulates an
interferometric grid of dishes, it then uses this to construct a synthetic
timestream, and then it forms the m-modes to make a map out of them. The
source files can be found under ``examples/disharray/`` in the git repository.

The custom telescope is contained in the file ``simplearray.py``.

The example can be run in two ways, first using the python program in
``driver.py`` which can be run by simply doing::

	$ python driver.py

or to speed things up, you can run::

	$ export OMP_NUM_THREADS=<DESIRED THREAD NUM>
	$ mpirun -np N python driver.py

where the ``OMP_NUM_THREADS`` is only useful if you are using threaded
numerical libraries (libsharp for SHT, MKL for linear algebra).


The second way to run the code is to use the `YAML` configuration file
interface. Simply run::

	$ drift-makeproducts run prod_params.yaml
	$ drift-runpipeline run pipe_params.yaml


In both cases you'll need a sky map to simulate. To get a quick map of the
galaxy, try running::

	$ cora-makesky galaxy 256 100.0 150.0 5 simulated_map.hdf5

Telescope class
---------------

A custom telescope class that simulates an interferometric array of dishes.

.. literalinclude:: ../examples/disharray/simplearray.py
	:language: python
	:linenos:

Python Driver
-------------

A python script that constructs a synthetic timestream from a given map and
the dish array telescope. This timstream is then analysed to produce an
observed sky map.

.. literalinclude:: ../examples/disharray/driver.py
	:language: python
	:linenos:

YAML Config
-----------

We can achieve the same results using the ``YAML`` configuration file drivers. The config file for generating the analysis products is:

.. literalinclude:: ../examples/disharray/prod_params.yaml
	:language: yaml
	:linenos:

and the one for configuring and running the pipeline is:

.. literalinclude:: ../examples/disharray/pipe_params.yaml
	:language: yaml
	:linenos:
